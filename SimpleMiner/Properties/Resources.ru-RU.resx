<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Caption" xml:space="preserve">
    <value>SimpleMiner</value>
  </data>
  <data name="ClmCfgCustomCommandBtn" xml:space="preserve">
    <value>Сгенерировать из параметров</value>
  </data>
  <data name="ClmCFgCustomCommandCb" xml:space="preserve">
    <value>Команда задана вручную</value>
  </data>
  <data name="ClmCfgTabCustomCommand" xml:space="preserve">
    <value>Команда вручную</value>
  </data>
  <data name="CloseButton" xml:space="preserve">
    <value>Закрыть</value>
  </data>
  <data name="ErrorCaption" xml:space="preserve">
    <value>Ошибка</value>
  </data>
  <data name="EthCreateWalletLink" xml:space="preserve">
    <value>Создать кошелек</value>
  </data>
  <data name="EthPool" xml:space="preserve">
    <value>Пул</value>
  </data>
  <data name="EthWallet" xml:space="preserve">
    <value>Кошелек</value>
  </data>
  <data name="EthWorker" xml:space="preserve">
    <value>Воркер</value>
  </data>
  <data name="HideDetailsButton" xml:space="preserve">
    <value>Спрятать детали</value>
  </data>
  <data name="MinerCfgCaption" xml:space="preserve">
    <value>Параметры майнера</value>
  </data>
  <data name="ShowDetailsButton" xml:space="preserve">
    <value>Показать детали</value>
  </data>
  <data name="tabAbout" xml:space="preserve">
    <value>О программе</value>
  </data>
  <data name="tabEthereum" xml:space="preserve">
    <value>Эфир</value>
  </data>
  <data name="tabOptions" xml:space="preserve">
    <value>Настройки</value>
  </data>
  <data name="ttClmCfgCustomCommandBtn" xml:space="preserve">
    <value>Сгенерировать команду на основе заданых параметров</value>
  </data>
  <data name="ttClmCFgCustomCommandCb" xml:space="preserve">
    <value>Использовать команду заданую вручную. В этом режиме остальные параметры будут проигнорированы</value>
  </data>
  <data name="ttConfigButton" xml:space="preserve">
    <value>Расширенные параметры</value>
  </data>
  <data name="ttErrorClose" xml:space="preserve">
    <value>Нажмите, что бы закрыть окно</value>
  </data>
  <data name="ttErrorDetails" xml:space="preserve">
    <value>Нажмите, что бы показать дополнительные детали</value>
  </data>
  <data name="ttEthPool" xml:space="preserve">
    <value>Адреса пулов для майнинга эфира</value>
  </data>
  <data name="ttEthWallet" xml:space="preserve">
    <value>Адрес вашего кошелька для Эфира. Также имя воркера и другие опции, если пул их поддерживает</value>
  </data>
  <data name="ttEthWorker" xml:space="preserve">
    <value>Имя работника (требуется некоторыми пулами)</value>
  </data>
  <data name="ttStartButton" xml:space="preserve">
    <value>Нажмите для начала майнинга</value>
  </data>
  <data name="ttStopButton" xml:space="preserve">
    <value>Нажмите что бы остановить майнинг</value>
  </data>
  <data name="ApplayButton" xml:space="preserve">
    <value>Применить</value>
  </data>
  <data name="CancelButton" xml:space="preserve">
    <value>Отменить</value>
  </data>
  <data name="DefaultsButton" xml:space="preserve">
    <value>По умолчанию</value>
  </data>
  <data name="ttApplayButton" xml:space="preserve">
    <value>Применить изменения и закрыть окно</value>
  </data>
  <data name="ttCancelButton" xml:space="preserve">
    <value>Отменить изменения и закрыть откно</value>
  </data>
  <data name="ttDefaultsButton" xml:space="preserve">
    <value>Восстановить значения по умолчанию</value>
  </data>
  <data name="ClmCfgSecondCoin" xml:space="preserve">
    <value>Майнить вторую монету</value>
  </data>
  <data name="ClmCfgTabCoins" xml:space="preserve">
    <value>Монеты</value>
  </data>
  <data name="ttClmCfgAllcoins" xml:space="preserve">
    <value>Отметьте чтобы иметь возможность добывать форки Эфира</value>
  </data>
  <data name="ttClmCfgAllPools" xml:space="preserve">
    <value>Отметьте если майнер не хочет работать на указанном пуле</value>
  </data>
  <data name="ttClmCfgDcoin" xml:space="preserve">
    <value>Выбор второй монеты для добычи в dual-режиме. По умолчанию — «dcr»</value>
  </data>
  <data name="ttClmCfgDcri" xml:space="preserve">
    <value>Интенсивность добычи второй монеты (Decred, Siacoin, Lbry, Pascal) или значение точной настройки Ethereum в режиме ASM в режиме «только ETH», по умолчанию 30.

Можно регулировать это значение для большей скорости добычи второй монеты без снижения скорости добычи Эфира.

Можно устанавливать значение индивидуально для каждой карты, например: «30,100,50»</value>
  </data>
  <data name="ttClmCfgDcrt" xml:space="preserve">
    <value>Период времени между Decred/Siacoin http-запросами новой работу, в секундах (по умолчанию 5 секунд)</value>
  </data>
  <data name="ttClmCfgDpool" xml:space="preserve">
    <value>Адрес пула для второй монеты (Decred, Siacoin, Lbry,Pascal).

Используйте: «http://» для HTTP пулов,

«stratum+tcp://» для Stratum пулов. Если префикс пропущен, предполагается Stratum.

Decred: оба протокола Stratum и HTTP поддерживаются.

Siacoin: оба протокола Stratum и HTTP поддерживаются, но не все версии Stratum поддерживаются на данный момент.

Lbry: только Stratum поддерживается</value>
  </data>
  <data name="ttClmCfgDpsw" xml:space="preserve">
    <value>Пароль для пула второй монеты (Decred, Siacoin, Lbry,Pascal), используйте «x», если не требуется пароль</value>
  </data>
  <data name="ttClmCfgDwal" xml:space="preserve">
    <value>Адрес кошелька для второй монеты (Decred, Siacoin, Lbry) или имя воркера — в зависимости от пула</value>
  </data>
  <data name="ttClmCfgErate" xml:space="preserve">
    <value>Отправлять на пул хешрейт Эфира</value>
  </data>
  <data name="ttClmCfgEsm" xml:space="preserve">
    <value>Режим протокола Стратум для Эфира</value>
  </data>
  <data name="ttClmCfgEstale" xml:space="preserve">
    <value>Отправлять на пул просроченные (stale) шары Эфира, это может чуть улучшить эффективный хешрейт — некоторые пулы принимают такие шары и оплачивают за них, так как они иногда принимают участие в создании uncle-блоков</value>
  </data>
  <data name="ttClmCfgEtha" xml:space="preserve">
    <value>Алгоритм добычи Эфира для карт AMD:
0 — оптимизирован для быстрых карт;
1 — оптимизирован для медленных карт;
2 – для драйверов Linux gpu-pro;
-1 (минус один, по умолчанию) — автоматический выбор режима, по умолчанию автоматически выбирается от 0 до 1.

Можно устанавливать эти значения индивидуально для каждой карты, например: « 0,1,0»</value>
  </data>
  <data name="ttClmCfgEthi" xml:space="preserve">
    <value>Интенсивность добычи Эфира (по умолчанию «8»).

Можно уменьшить, во избежание подтормаживаний Windows или при нестабильной работе. Наименьшая нагрузка на видеокарту при 0.Можно устанавливать значение индивидуально для каждой карты, например: «1,8,6»</value>
  </data>
  <data name="ttClmCfgPsw" xml:space="preserve">
    <value>Пароль для пула Эфира, укажите «x», как пароль</value>
  </data>
  <data name="ttClmCfgSolo" xml:space="preserve">
    <value>Использовать СОЛО режим</value>
  </data>
  <data name="ttClmCfgWorker" xml:space="preserve">
    <value>Имя Воркера, требуется на некоторых пулах</value>
  </data>
  <data name="ttClmCfgEtht" xml:space="preserve">
    <value>Период времени между http-запросами на новую работу в СОЛО, в миллисекундах (по умолчанию 200мс)</value>
  </data>
  <data name="ttClmCustomCommand" xml:space="preserve">
    <value>Команда для майнера. Что бы изменить ее нажмите кнопку &lt;Расширенные параметры&gt;</value>
  </data>
</root>