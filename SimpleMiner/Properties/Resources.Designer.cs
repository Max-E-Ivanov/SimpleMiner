//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SimpleMiner.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SimpleMiner.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applay.
        /// </summary>
        internal static string ApplayButton {
            get {
                return ResourceManager.GetString("ApplayButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        internal static string CancelButton {
            get {
                return ResourceManager.GetString("CancelButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SimpleMiner.
        /// </summary>
        internal static string Caption {
            get {
                return ResourceManager.GetString("Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generate.
        /// </summary>
        internal static string ClmCfgCustomCommandBtn {
            get {
                return ResourceManager.GetString("ClmCfgCustomCommandBtn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom command.
        /// </summary>
        internal static string ClmCFgCustomCommandCb {
            get {
                return ResourceManager.GetString("ClmCFgCustomCommandCb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restart if close.
        /// </summary>
        internal static string ClmCfgRestart {
            get {
                return ResourceManager.GetString("ClmCfgRestart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mine Second coin.
        /// </summary>
        internal static string ClmCfgSecondCoin {
            get {
                return ResourceManager.GetString("ClmCfgSecondCoin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show miner window.
        /// </summary>
        internal static string ClmCfgShowWindow {
            get {
                return ResourceManager.GetString("ClmCfgShowWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Coins.
        /// </summary>
        internal static string ClmCfgTabCoins {
            get {
                return ResourceManager.GetString("ClmCfgTabCoins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom command.
        /// </summary>
        internal static string ClmCfgTabCustomCommand {
            get {
                return ResourceManager.GetString("ClmCfgTabCustomCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GPU settings.
        /// </summary>
        internal static string ClmCfgTabGPUSettings {
            get {
                return ResourceManager.GetString("ClmCfgTabGPUSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Other settings.
        /// </summary>
        internal static string ClmCfgTabOtherSettings {
            get {
                return ResourceManager.GetString("ClmCfgTabOtherSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        internal static string CloseButton {
            get {
                return ResourceManager.GetString("CloseButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore defaults.
        /// </summary>
        internal static string DefaultsButton {
            get {
                return ResourceManager.GetString("DefaultsButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        internal static string ErrorCaption {
            get {
                return ResourceManager.GetString("ErrorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Wallet.
        /// </summary>
        internal static string EthCreateWalletLink {
            get {
                return ResourceManager.GetString("EthCreateWalletLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pool.
        /// </summary>
        internal static string EthPool {
            get {
                return ResourceManager.GetString("EthPool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wallet.
        /// </summary>
        internal static string EthWallet {
            get {
                return ResourceManager.GetString("EthWallet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Worker.
        /// </summary>
        internal static string EthWorker {
            get {
                return ResourceManager.GetString("EthWorker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide details.
        /// </summary>
        internal static string HideDetailsButton {
            get {
                return ResourceManager.GetString("HideDetailsButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap IcoMiningLogo {
            get {
                object obj = ResourceManager.GetObject("IcoMiningLogo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Info.
        /// </summary>
        internal static string InfoCaption {
            get {
                return ResourceManager.GetString("InfoCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        internal static string Language {
            get {
                return ResourceManager.GetString("Language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to simpleminer@gmail.com.
        /// </summary>
        internal static string MailTo {
            get {
                return ResourceManager.GetString("MailTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Miner parameters.
        /// </summary>
        internal static string MinerCfgCaption {
            get {
                return ResourceManager.GetString("MinerCfgCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap MiningLogo {
            get {
                object obj = ResourceManager.GetObject("MiningLogo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restart program for applay selected language .
        /// </summary>
        internal static string OptChangeLanguageMessage {
            get {
                return ResourceManager.GetString("OptChangeLanguageMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap s_error {
            get {
                object obj = ResourceManager.GetObject("s_error", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap s_settings {
            get {
                object obj = ResourceManager.GetObject("s_settings", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap s_start {
            get {
                object obj = ResourceManager.GetObject("s_start", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap s_stop {
            get {
                object obj = ResourceManager.GetObject("s_stop", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show details.
        /// </summary>
        internal static string ShowDetailsButton {
            get {
                return ResourceManager.GetString("ShowDetailsButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About.
        /// </summary>
        internal static string tabAbout {
            get {
                return ResourceManager.GetString("tabAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ethereum.
        /// </summary>
        internal static string tabEthereum {
            get {
                return ResourceManager.GetString("tabEthereum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting.
        /// </summary>
        internal static string tabOptions {
            get {
                return ResourceManager.GetString("tabOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applay changes and close form.
        /// </summary>
        internal static string ttApplayButton {
            get {
                return ResourceManager.GetString("ttApplayButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel changes and close form.
        /// </summary>
        internal static string ttCancelButton {
            get {
                return ResourceManager.GetString("ttCancelButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check to be able to mine Ethereum forks, in this mode miner will use some default pools for devfee Ethereum mining.
        /// </summary>
        internal static string ttClmCfgAllcoins {
            get {
                return ResourceManager.GetString("ttClmCfgAllcoins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check if miner does not want to mine on specified pool (because it cannot mine devfee on that pool), but you agree to use some default pools for devfee mining.
        /// </summary>
        internal static string ttClmCfgAllPools {
            get {
                return ResourceManager.GetString("ttClmCfgAllPools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generate command for miner.
        /// </summary>
        internal static string ttClmCfgCustomCommandBtn {
            get {
                return ResourceManager.GetString("ttClmCfgCustomCommandBtn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use custom command for miner. In this mode other settings are ignored.
        /// </summary>
        internal static string ttClmCFgCustomCommandCb {
            get {
                return ResourceManager.GetString("ttClmCFgCustomCommandCb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select second coin to mine in dual mode.
        /// </summary>
        internal static string ttClmCfgDcoin {
            get {
                return ResourceManager.GetString("ttClmCfgDcoin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decred/Siacoin/Lbry/Pascal intensity, or Ethereum fine-tuning value in ETH-only ASM mode. Default value is 30, you can adjust this value to get the best Decred/Siacoin/Lbry mining speed without reducing Ethereum mining speed. 
        ///   You can also specify values for every card, for example &quot;30,100,50&quot;.
        /// </summary>
        internal static string ttClmCfgDcri {
            get {
                return ResourceManager.GetString("ttClmCfgDcri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time period between Decred/Siacoin HTTP requests for new job, in seconds. Default value is 5 seconds.
        /// </summary>
        internal static string ttClmCfgDcrt {
            get {
                return ResourceManager.GetString("ttClmCfgDcrt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decred/Siacoin/Lbry/Pascal pool address. Use &quot;http://&quot; prefix for HTTP pools, &quot;stratum+tcp://&quot; for Stratum pools. If prefix is missed, Stratum is assumed.
        ///   Decred: both Stratum and HTTP are supported. Siacoin: both Stratum and HTTP are supported, though note that not all Stratum versions are supported currently. Lbry: only Stratum is supported.
        /// </summary>
        internal static string ttClmCfgDpool {
            get {
                return ResourceManager.GetString("ttClmCfgDpool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password for Decred/Siacoin/Lbry/Pascal pool.
        /// </summary>
        internal static string ttClmCfgDpsw {
            get {
                return ResourceManager.GetString("ttClmCfgDpsw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your Decred/Siacoin/Lbry/Pascal wallet address or worker name, it depends on pool.
        /// </summary>
        internal static string ttClmCfgDwal {
            get {
                return ResourceManager.GetString("ttClmCfgDwal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send Ethereum hashrate to pool.
        /// </summary>
        internal static string ttClmCfgErate {
            get {
                return ResourceManager.GetString("ttClmCfgErate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ethereum Stratum mode.
        /// </summary>
        internal static string ttClmCfgEsm {
            get {
                return ResourceManager.GetString("ttClmCfgEsm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send Ethereum stale shares to pool, it can increase effective hashrate a bit.
        /// </summary>
        internal static string ttClmCfgEstale {
            get {
                return ResourceManager.GetString("ttClmCfgEstale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ethereum algorithm mode for AMD cards. 0 - optimized for fast cards, 1 - optimized for slow cards, 2 - for gpu-pro Linux drivers. -1 - autodetect (default, automatically selects between 0 and 1). 
        ///   You can also set this option for every card individually, for example &quot;-etha 0,1,0&quot;.
        /// </summary>
        internal static string ttClmCfgEtha {
            get {
                return ResourceManager.GetString("ttClmCfgEtha", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ethereum intensity. Default value is 8, you can decrease this value if you don&apos;t want Windows to freeze or if you have problems with stability. The most low GPU load is &quot;-ethi 0&quot;.
        ///   Also &quot;-ethi&quot; now can set intensity for every card individually, for example &quot; 1,8,6&quot;.
        /// </summary>
        internal static string ttClmCfgEthi {
            get {
                return ResourceManager.GetString("ttClmCfgEthi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time period between Ethereum HTTP requests for new job in solo mode, in milliseconds. Default value is 200ms.
        /// </summary>
        internal static string ttClmCfgEtht {
            get {
                return ResourceManager.GetString("ttClmCfgEtht", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password for Ethereum pool, use &quot;x&quot; as password.
        /// </summary>
        internal static string ttClmCfgPsw {
            get {
                return ResourceManager.GetString("ttClmCfgPsw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restart when miner is crashed.
        /// </summary>
        internal static string ttClmCfgRestart {
            get {
                return ResourceManager.GetString("ttClmCfgRestart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use SOLO mode.
        /// </summary>
        internal static string ttClmCfgSolo {
            get {
                return ResourceManager.GetString("ttClmCfgSolo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Worker name, it is required for some pools.
        /// </summary>
        internal static string ttClmCfgWorker {
            get {
                return ResourceManager.GetString("ttClmCfgWorker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To change custom command click Extended parameters button.
        /// </summary>
        internal static string ttClmCustomCommand {
            get {
                return ResourceManager.GetString("ttClmCustomCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extended parameters.
        /// </summary>
        internal static string ttConfigButton {
            get {
                return ResourceManager.GetString("ttConfigButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore default settings.
        /// </summary>
        internal static string ttDefaultsButton {
            get {
                return ResourceManager.GetString("ttDefaultsButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press to close error dialog.
        /// </summary>
        internal static string ttErrorClose {
            get {
                return ResourceManager.GetString("ttErrorClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press to show additional details.
        /// </summary>
        internal static string ttErrorDetails {
            get {
                return ResourceManager.GetString("ttErrorDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pool address for Ethereum mining.
        /// </summary>
        internal static string ttEthPool {
            get {
                return ResourceManager.GetString("ttEthPool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Address of your Ethereum wallet.
        /// </summary>
        internal static string ttEthWallet {
            get {
                return ResourceManager.GetString("ttEthWallet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Worker name.
        /// </summary>
        internal static string ttEthWorker {
            get {
                return ResourceManager.GetString("ttEthWorker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language of inteface.
        /// </summary>
        internal static string ttLanguage {
            get {
                return ResourceManager.GetString("ttLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press for start mining.
        /// </summary>
        internal static string ttStartButton {
            get {
                return ResourceManager.GetString("ttStartButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press fro stop mining.
        /// </summary>
        internal static string ttStopButton {
            get {
                return ResourceManager.GetString("ttStopButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://www.google.com.
        /// </summary>
        internal static string Web {
            get {
                return ResourceManager.GetString("Web", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WriteLog.
        /// </summary>
        internal static string WriteLog {
            get {
                return ResourceManager.GetString("WriteLog", resourceCulture);
            }
        }
    }
}
